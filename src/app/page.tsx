// Cole aqui o seu código React/Next completo
export default function Page() {
  return (
    <main className="p-6">
      <h1 className="text-2xl font-bold">Pregnancy App</h1>
      "use client" import { useState, useEffect } from 'react' import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card' import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs' import { Button } from '@/components/ui/button' import { Input } from '@/components/ui/input' import { Label } from '@/components/ui/label' import { Badge } from '@/components/ui/badge' import { Progress } from '@/components/ui/progress' import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog' import { Heart, Baby, Clock, Bell, ShoppingCart, Calendar, Pill, Star, Gift, AlertCircle, CheckCircle, Menu, X } from 'lucide-react' interface Reminder { id: string title: string time: string type: 'medication' | 'appointment' | 'exercise' | 'other' completed: boolean } interface Deal { id: string product: string originalPrice: number salePrice: number discount: number store: string category: string } export default function PregnancyApp() { const [currentWeek, setCurrentWeek] = useState(20) const [activeTab, setActiveTab] = useState('care') const [mobileMenuOpen, setMobileMenuOpen] = useState(false) const [reminders, setReminders] = useState<Reminder[]>([ { id: '1', title: 'Tomar ácido fólico', time: '08:00', type: 'medication', completed: false }, { id: '2', title: 'Consulta pré-natal', time: '14:30', type: 'appointment', completed: false }, { id: '3', title: 'Caminhada leve', time: '17:00', type: 'exercise', completed: true }, ]) const [newReminder, setNewReminder] = useState({ title: '', time: '', type: 'medication' as const }) const [deals] = useState<Deal[]>([ { id: '1', product: 'Carrinho de Bebê Premium', originalPrice: 899, salePrice: 599, discount: 33, store: 'BabyCenter', category: 'Transporte' }, { id: '2', product: 'Kit Berço Completo', originalPrice: 1200, salePrice: 799, discount: 33, store: 'Mundo do Bebê', category: 'Quarto' }, { id: '3', product: 'Cadeira para Auto', originalPrice: 650, salePrice: 449, discount: 31, store: 'Safety First', category: 'Segurança' }, { id: '4', product: 'Monitor de Bebê', originalPrice: 299, salePrice: 199, discount: 33, store: 'TechBaby', category: 'Eletrônicos' }, { id: '5', product: 'Kit Amamentação', originalPrice: 180, salePrice: 129, discount: 28, store: 'Mamãe & Bebê', category: 'Alimentação' }, { id: '6', product: 'Banheira Ergonômica', originalPrice: 120, salePrice: 79, discount: 34, store: 'Higiene Total', category: 'Higiene' }, ]) const pregnancyTips = [ { week: currentWeek, title: Semana ${currentWeek} - Seu bebê está crescendo!, babySize: 'Tamanho de uma banana', babyWeight: '300g aproximadamente', tips: [ 'Mantenha uma alimentação rica em cálcio e ferro', 'Pratique exercícios leves como caminhada', 'Durma de lado para melhor circulação', 'Hidrate-se bem, beba pelo menos 2L de água por dia' ], symptoms: ['Enjoos matinais diminuindo', 'Aumento do apetite', 'Possível azia', 'Movimentos do bebê mais perceptíveis'] } ] const addReminder = () => { if (newReminder.title && newReminder.time) { const reminder: Reminder = { id: Date.now().toString(), ...newReminder, completed: false } setReminders([...reminders, reminder]) setNewReminder({ title: '', time: '', type: 'medication' }) } } const toggleReminder = (id: string) => { setReminders(reminders.map(r => r.id === id ? { ...r, completed: !r.completed } : r )) } const getReminderIcon = (type: string) => { switch (type) { case 'medication': return <Pill className="w-4 h-4" /> case 'appointment': return <Calendar className="w-4 h-4" /> case 'exercise': return <Heart className="w-4 h-4" /> default: return <Bell className="w-4 h-4" /> } } const progressPercentage = (currentWeek / 40) * 100 const tabConfig = [ { id: 'care', label: 'Cuidados', icon: Heart, color: 'from-pink-500 to-rose-500' }, { id: 'reminders', label: 'Lembretes', icon: Bell, color: 'from-blue-500 to-cyan-500' }, { id: 'deals', label: 'Ofertas', icon: ShoppingCart, color: 'from-green-500 to-emerald-500' } ] return ( <div className="min-h-screen bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50"> {/* Header Mobile-First */} <div className="bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 text-white shadow-2xl"> <div className="px-4 py-6 sm:px-6 lg:px-8"> <div className="flex items-center justify-between mb-6"> <div className="flex items-center gap-3"> <div className="bg-white/20 p-2 rounded-2xl backdrop-blur-sm"> <Baby className="w-6 h-6 sm:w-8 sm:h-8" /> </div> <div> <h1 className="text-xl sm:text-2xl lg:text-3xl font-bold">Minha Jornada</h1> <p className="text-xs sm:text-sm text-pink-100">Para você e nosso bebê 💕</p> </div> </div> </div> {/* Pregnancy Progress - Mobile Optimized */} <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-4 sm:p-6"> <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-3"> <span className="text-sm font-medium mb-1 sm:mb-0">Progresso da Gravidez</span> <span className="text-lg sm:text-xl font-bold">{currentWeek}/40 semanas</span> </div> <Progress value={progressPercentage} className="h-3 sm:h-4 bg-white/20 mb-3" /> <div className="text-center"> <p className="text-xs sm:text-sm text-pink-100"> Você está fazendo um trabalho incrível! 🌟 </p> </div> </div> </div> </div> {/* Mobile Navigation */} <div className="sticky top-0 z-40 bg-white/90 backdrop-blur-md border-b border-pink-200 sm:hidden"> <div className="flex overflow-x-auto px-4 py-3 gap-2"> {tabConfig.map((tab) => { const Icon = tab.icon return ( <button key={tab.id} onClick={() => setActiveTab(tab.id)} className={flex items-center gap-2 px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 ${ activeTab === tab.id ? bg-gradient-to-r ${tab.color} text-white shadow-lg scale-105 : 'bg-gray-100 text-gray-600 hover:bg-gray-200' }} > <Icon className="w-4 h-4" /> <span className="text-sm font-medium">{tab.label}</span> </button> ) })} </div> </div> <div className="px-4 py-6 sm:px-6 lg:px-8 max-w-6xl mx-auto"> {/* Desktop Tabs */} <div className="hidden sm:block mb-8"> <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full"> <TabsList className="grid w-full grid-cols-3 bg-white/70 backdrop-blur-sm h-14 rounded-2xl p-1"> {tabConfig.map((tab) => { const Icon = tab.icon return ( <TabsTrigger key={tab.id} value={tab.id} className="flex items-center gap-2 h-12 rounded-xl data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-500 data-[state=active]:text-white transition-all duration-300" > <Icon className="w-5 h-5" /> <span className="font-medium">{tab.label}</span> </TabsTrigger> ) })} </TabsList> </Tabs> </div> {/* Content Sections */} <div className="space-y-6"> {/* Cuidados da Gravidez */} {activeTab === 'care' && ( <div className="space-y-6 animate-in slide-in-from-bottom-4 duration-500"> <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-2xl rounded-3xl overflow-hidden"> <CardHeader className="bg-gradient-to-r from-pink-500 to-purple-500 text-white p-6"> <CardTitle className="flex items-center gap-3 text-xl sm:text-2xl"> <div className="bg-white/20 p-2 rounded-xl"> <Baby className="w-6 h-6" /> </div> <div> <div>Semana {currentWeek}</div> <div className="text-sm font-normal text-pink-100">Desenvolvimento do Bebê</div> </div> </CardTitle> </CardHeader> <CardContent className="p-6"> <div className="grid gap-6 lg:grid-cols-2"> {/* Baby Info */} <div className="space-y-4"> <div className="bg-gradient-to-br from-pink-50 to-rose-100 p-6 rounded-2xl border border-pink-200"> <h4 className="font-bold text-pink-800 mb-3 flex items-center gap-2"> <Baby className="w-5 h-5" /> Tamanho do Bebê </h4> <p className="text-2xl sm:text-3xl font-bold text-pink-600 mb-2">{pregnancyTips[0].babySize}</p> <p className="text-pink-500 font-medium">{pregnancyTips[0].babyWeight}</p> </div> <div className="bg-gradient-to-br from-purple-50 to-violet-100 p-6 rounded-2xl border border-purple-200"> <h4 className="font-bold text-purple-800 mb-3 flex items-center gap-2"> <AlertCircle className="w-5 h-5" /> Sintomas Comuns </h4> <ul className="space-y-2"> {pregnancyTips[0].symptoms.map((symptom, index) => ( <li key={index} className="flex items-center gap-3 text-sm text-purple-700"> <div className="w-2 h-2 bg-purple-400 rounded-full flex-shrink-0" /> {symptom} </li> ))} </ul> </div> </div> {/* Tips */} <div className="bg-gradient-to-br from-blue-50 to-cyan-100 p-6 rounded-2xl border border-blue-200"> <h4 className="font-bold text-blue-800 mb-4 flex items-center gap-2"> <Star className="w-5 h-5" /> Dicas de Cuidados </h4> <ul className="space-y-3"> {pregnancyTips[0].tips.map((tip, index) => ( <li key={index} className="flex items-start gap-3 text-sm text-blue-700"> <CheckCircle className="w-5 h-5 text-blue-500 mt-0.5 flex-shrink-0" /> <span className="leading-relaxed">{tip}</span> </li> ))} </ul> </div> </div> </CardContent> </Card> {/* Nutrition & Exercise Cards */} <div className="grid gap-6 sm:grid-cols-2"> <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-xl rounded-2xl overflow-hidden"> <CardHeader className="bg-gradient-to-r from-green-500 to-emerald-500 text-white p-4"> <CardTitle className="text-lg flex items-center gap-2"> <Heart className="w-5 h-5" /> Nutrição Essencial </CardTitle> </CardHeader> <CardContent className="p-4"> <div className="space-y-3"> {[ { name: 'Ácido Fólico', level: 'Essencial', color: 'green' }, { name: 'Ferro', level: 'Importante', color: 'orange' }, { name: 'Cálcio', level: 'Necessário', color: 'blue' }, { name: 'Ômega-3', level: 'Recomendado', color: 'purple' } ].map((nutrient, index) => ( <div key={index} className="flex justify-between items-center p-3 bg-gray-50 rounded-xl"> <span className="font-medium text-gray-800">{nutrient.name}</span> <Badge className={bg-${nutrient.color}-100 text-${nutrient.color}-800 border-${nutrient.color}-200}> {nutrient.level} </Badge> </div> ))} </div> </CardContent> </Card> <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-xl rounded-2xl overflow-hidden"> <CardHeader className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white p-4"> <CardTitle className="text-lg flex items-center gap-2"> <Heart className="w-5 h-5" /> Exercícios Seguros </CardTitle> </CardHeader> <CardContent className="p-4"> <div className="space-y-3"> {[ 'Caminhada (30 min/dia)', 'Yoga pré-natal', 'Natação leve', 'Alongamentos' ].map((exercise, index) => ( <div key={index} className="flex items-center gap-3 p-3 bg-orange-50 rounded-xl"> <Heart className="w-4 h-4 text-orange-500 flex-shrink-0" /> <span className="text-orange-800 font-medium">{exercise}</span> </div> ))} </div> </CardContent> </Card> </div> </div> )} {/* Lembretes */} {activeTab === 'reminders' && ( <div className="space-y-6 animate-in slide-in-from-bottom-4 duration-500"> <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-2xl rounded-3xl overflow-hidden"> <CardHeader className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white p-6"> <CardTitle className="flex items-center gap-3 text-xl sm:text-2xl"> <div className="bg-white/20 p-2 rounded-xl"> <Bell className="w-6 h-6" /> </div> <div> <div>Seus Lembretes</div> <div className="text-sm font-normal text-blue-100">Mantenha sua rotina em dia</div> </div> </CardTitle> </CardHeader> <CardContent className="p-6"> {/* Add Reminder Form */} <div className="bg-gradient-to-br from-blue-50 to-cyan-50 p-6 rounded-2xl mb-6 border border-blue-200"> <h4 className="font-bold text-blue-800 mb-4 flex items-center gap-2"> <Bell className="w-5 h-5" /> Adicionar Novo Lembrete </h4> <div className="space-y-4"> <div> <Label htmlFor="title" className="text-sm font-medium text-blue-700 mb-2 block">Título</Label> <Input id="title" placeholder="Ex: Tomar vitamina pré-natal" value={newReminder.title} onChange={(e) => setNewReminder({...newReminder, title: e.target.value})} className="bg-white border-blue-200 focus:border-blue-400 rounded-xl h-12" /> </div> <div className="grid gap-4 sm:grid-cols-2"> <div> <Label htmlFor="time" className="text-sm font-medium text-blue-700 mb-2 block">Horário</Label> <Input id="time" type="time" value={newReminder.time} onChange={(e) => setNewReminder({...newReminder, time: e.target.value})} className="bg-white border-blue-200 focus:border-blue-400 rounded-xl h-12" /> </div> <div> <Label htmlFor="type" className="text-sm font-medium text-blue-700 mb-2 block">Tipo</Label> <select id="type" value={newReminder.type} onChange={(e) => setNewReminder({...newReminder, type: e.target.value as any})} className="w-full h-12 p-3 border border-blue-200 rounded-xl bg-white text-sm focus:border-blue-400 focus:outline-none" > <option value="medication">Medicamento</option> <option value="appointment">Consulta</option> <option value="exercise">Exercício</option> <option value="other">Outro</option> </select> </div> </div> <Button onClick={addReminder} className="w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 h-12 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300" > <Bell className="w-4 h-4 mr-2" /> Adicionar Lembrete </Button> </div> </div> {/* Reminders List */} <div className="space-y-4"> <h4 className="font-bold text-gray-800 text-lg">Lembretes de Hoje</h4> {reminders.map((reminder) => ( <div key={reminder.id} className={flex items-center gap-4 p-4 rounded-2xl border-2 transition-all duration-300 ${ reminder.completed ? 'bg-gradient-to-r from-green-50 to-emerald-50 border-green-200' : 'bg-white border-gray-200 hover:border-blue-300 hover:shadow-lg' }} > <button onClick={() => toggleReminder(reminder.id)} className={w-6 h-6 rounded-full border-2 flex items-center justify-center transition-all duration-300 ${ reminder.completed ? 'bg-green-500 border-green-500 scale-110' : 'border-gray-300 hover:border-blue-400 hover:scale-110' }} > {reminder.completed && <CheckCircle className="w-4 h-4 text-white" />} </button> <div className={p-2 rounded-xl ${reminder.completed ? 'bg-green-100' : 'bg-blue-100'}}> <div className={reminder.completed ? 'text-green-600' : 'text-blue-600'}> {getReminderIcon(reminder.type)} </div> </div> <div className="flex-1 min-w-0"> <p className={font-medium truncate ${reminder.completed ? 'line-through text-green-600' : 'text-gray-800'}}> {reminder.title} </p> <p className={text-sm ${reminder.completed ? 'text-green-500' : 'text-gray-500'}}> {reminder.time} </p> </div> <Badge className={${ reminder.completed ? "bg-green-100 text-green-800 border-green-200" : "bg-blue-100 text-blue-800 border-blue-200" } px-3 py-1 rounded-full text-xs font-medium} > {reminder.type === 'medication' ? 'Medicamento' : reminder.type === 'appointment' ? 'Consulta' : reminder.type === 'exercise' ? 'Exercício' : 'Outro'} </Badge> </div> ))} </div> </CardContent> </Card> </div> )} {/* Ofertas e Descontos */} {activeTab === 'deals' && ( <div className="space-y-6 animate-in slide-in-from-bottom-4 duration-500"> <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-2xl rounded-3xl overflow-hidden"> <CardHeader className="bg-gradient-to-r from-green-500 to-emerald-500 text-white p-6"> <CardTitle className="flex items-center gap-3 text-xl sm:text-2xl"> <div className="bg-white/20 p-2 rounded-xl"> <ShoppingCart className="w-6 h-6" /> </div> <div> <div>Melhores Ofertas</div> <div className="text-sm font-normal text-green-100">Economize para o bebê</div> </div> </CardTitle> </CardHeader> <CardContent className="p-6"> <div className="grid gap-4 sm:gap-6"> {deals.map((deal) => ( <div key={deal.id} className="bg-white border-2 border-gray-100 rounded-2xl p-4 sm:p-6 hover:shadow-2xl hover:border-green-200 transition-all duration-300 group"> <div className="flex flex-col sm:flex-row sm:justify-between sm:items-start gap-4 mb-4"> <div className="flex-1 min-w-0"> <h4 className="font-bold text-gray-800 mb-2 text-lg group-hover:text-green-700 transition-colors"> {deal.product} </h4> <p className="text-gray-600 font-medium">{deal.store}</p> </div> <Badge className="bg-gradient-to-r from-red-500 to-pink-500 text-white border-0 px-3 py-1 text-sm font-bold self-start"> -{deal.discount}% </Badge> </div> <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4"> <div className="flex items-center gap-4"> <span className="text-2xl sm:text-3xl font-bold text-green-600"> R$ {deal.salePrice.toFixed(2)} </span> <span className="text-lg text-gray-500 line-through"> R$ {deal.originalPrice.toFixed(2)} </span> </div> <div className="flex flex-col sm:flex-row items-start sm:items-center gap-3"> <Badge variant="outline" className="text-xs font-medium px-3 py-1 rounded-full"> {deal.category} </Badge> <Button className="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 shadow-lg hover:shadow-xl transition-all duration-300 rounded-xl px-6"> <Gift className="w-4 h-4 mr-2" /> Ver Oferta </Button> </div> </div> <div className="mt-4 p-3 bg-green-50 rounded-xl"> <p className="text-sm text-green-700 font-medium"> 💰 Economia de R$ {(deal.originalPrice - deal.salePrice).toFixed(2)} </p> </div> </div> ))} </div> <div className="mt-8 p-6 bg-gradient-to-r from-pink-100 via-purple-100 to-blue-100 rounded-2xl border border-purple-200"> <div className="flex items-center gap-3 mb-3"> <div className="bg-yellow-100 p-2 rounded-xl"> <Star className="w-6 h-6 text-yellow-600" /> </div> <h4 className="font-bold text-purple-800 text-lg">Dica Especial</h4> </div> <p className="text-purple-700 leading-relaxed"> Cadastre-se nas newsletters das lojas para receber ofertas exclusivas e cupons de desconto especiais para mamães! Muitas lojas oferecem descontos de até 50% para futuras mamães. </p> </div> </CardContent> </Card> </div> )} </div> {/* Love Message */} <Card className="bg-gradient-to-r from-pink-100 via-purple-100 to-blue-100 border-0 shadow-2xl rounded-3xl overflow-hidden mt-8"> <CardContent className="p-8 text-center"> <div className="flex justify-center mb-6"> <div className="bg-gradient-to-r from-pink-500 to-purple-500 p-4 rounded-2xl shadow-lg"> <Heart className="w-10 h-10 text-white" /> </div> </div> <h3 className="text-2xl sm:text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-600 to-purple-600 mb-4"> Uma Surpresa Feita com Amor 💕 </h3> <p className="text-gray-700 max-w-3xl mx-auto leading-relaxed text-lg"> Este app foi criado especialmente para você e nosso bebê. Cada funcionalidade foi pensada para tornar essa jornada ainda mais especial e organizada. Você é incrível e vai ser uma mamãe maravilhosa! 🌟 </p> <div className="mt-6 flex justify-center"> <div className="bg-white/50 backdrop-blur-sm px-6 py-3 rounded-full"> <p className="text-purple-700 font-medium">Com todo meu amor ❤️</p> </div> </div> </CardContent> </Card> </div> </div> ) }
